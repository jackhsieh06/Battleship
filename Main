import java.util.Random;
import java.util.Scanner;
//The Scanner allows the programme to read input from keyboards using the java.util package

public class Main {
    static char[][] Hidden_Pattern = new char[8][8];
    static char[][] Guess_Pattern = new char[8][8];
    static final char EMPTY = ' ';
    static final char SHIPGUESS = 'X';
    static final char MISS = '-';

    static String let_to_num = "ABCDEFGH";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Random rand = new Random();

        // Creates the empty spce for the board
        for (int a = 0; a < 8; a++) {
            for (int b = 0; b < 8; b++) {
                Hidden_Pattern[a][b] = EMPTY;
                Guess_Pattern[a][b] = EMPTY;
            }
        }

        // Creates the ships before the game by placing them randomly on board
        createShips(rand);

        // Start the game
        int turns = 20;
        System.out.println("\u001B[1m" + "Welcome to Battleships!");
        System.out.println("FIND ALL 7 HIDDEN SHIPS");
        System.out.println("\u001B[0m"); 

        while (turns > 0) {
            printBoard(Guess_Pattern);
            int[] coordinates = getShipLocation(sc);
            int row = coordinates[0];
            int column = coordinates[1];
            

            if (Guess_Pattern[row][column] == MISS) {
                System.out.println("You already guessed that.");
            } else if (Hidden_Pattern[row][column] == SHIPGUESS) {
                System.out.println("\u001B[32m" + "Congratulations, you have hit the battleship. Well done.");
                System.out.println("\u001B[0m"); 
                Guess_Pattern[row][column] = SHIPGUESS;
                turns--;
            } else {
                System.out.println("\u001B[31m" + "Sorry, you missed");
                System.out.println("\u001B[0m"); 
                Guess_Pattern[row][column] = MISS;
                turns--;
            }

            if (countShipsHit(Guess_Pattern) == 20) {
                System.out.println("Congratulations you have sunk all the battleships!");
                System.out.println("\u001B[43m" + "Game Over. Well Played!");
                System.out.println("\u001B[0m"); // Reset color to default
                break;
            }

            System.out.println("You have " + turns + " turns remaining.");

            if (turns == 0) {
                System.out.println("\u001B[32m" + "Game Over.");
                System.out.println("\u001B[0m"); // Reset color to default
            }
        }
        sc.close();
    }
    // The colours are set using ANSI colours for example "/u001B[43m" on line 57 makes the text green"
    // The "sc.close()" part prevents any further input. As the player has now either won or lost the game.
    // Print the board. This section prints the 2D array for my Battleship game.
    public static void printBoard(char[][] board) {
        System.out.println("            A B C D E F G H");
        for (int a = 0; a < 8; a++) {
            System.out.print("      row " + (a + 1) + "|");
            for (int b = 0; b < 8; b++) {
                System.out.print(board[a][b]);
                if (b < 7) System.out.print("|");
            }
            System.out.println("|");
        }
    }

   
    public static int[] getShipLocation(Scanner sc) {
        int row;
        String column;
        while (true) {
            System.out.print("Please enter a ship row 1-8: ");
            row = sc.nextInt() - 1;
            if (row >= 0 && row < 8) {
                break;
            } else {
                System.out.println("You're guess is not in the ocean unfortunately.");
            }
        }

        while (true) {
            System.out.print("Please enter a ship column A-H: ");
            column = sc.next().toUpperCase();
            int columnIndex = let_to_num.indexOf(column);
            if (columnIndex != -1) {
                return new int[] { row, columnIndex };
            } else {
                System.out.println("Oh no, you're guess is not in the ocean unfortunately.");
            }
        }
    }

    // Function that creates the ships
    public static void createShips(Random rand) {
        int shipsCreated = 0;
        while (shipsCreated < 20) {
            int row = rand.nextInt(8);
            int column = rand.nextInt(8);
            if (Hidden_Pattern[row][column] != SHIPGUESS) {
                Hidden_Pattern[row][column] = SHIPGUESS;
                shipsCreated++;
            }
        }
    }

    // Count the number of ships that have been hit
    public static int countShipsHit(char[][] board) {
        int count = 0;
        for (int a = 0; a < 8; a++) {
            for (int b = 0; b < 8; b++) {
                if (board[a][b] == SHIPGUESS) {
                    count++;
                }
            }
        }
        return count;
    }
}
